<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Luau on Anaminus.Blog</title><link>https://anaminus.github.io/blog/tags/luau/</link><description>Recent content in Luau on Anaminus.Blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Wed, 23 Aug 2023 11:35:34 +0000</lastBuildDate><atom:link href="https://anaminus.github.io/blog/tags/luau/index.xml" rel="self" type="application/rss+xml"/><item><title>Luau coverage</title><link>https://anaminus.github.io/blog/briefs/202308231135/</link><pubDate>Wed, 23 Aug 2023 11:35:34 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202308231135/</guid><content:encoded>&lt;p&gt;Wrote a script to display &lt;code&gt;luau --coverage&lt;/code&gt; in a readable format.&lt;/p&gt;
&lt;figure&gt;&lt;video src="https://anaminus.github.io/blog/briefs/202308231135/00.mp4" controls loop&gt;&lt;/video&gt;&lt;/figure&gt;</content:encoded></item><item><title>TaskPolyfill</title><link>https://anaminus.github.io/blog/briefs/202308191529/</link><pubDate>Sat, 19 Aug 2023 15:29:23 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202308191529/</guid><content:encoded>&lt;p&gt;Polyfill for Roblox&amp;rsquo;s task library. Useful for standalone Luau.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Anaminus/roblox-library/tree/master/modules/TaskPolyfill"&gt;https://github.com/Anaminus/roblox-library/tree/master/modules/TaskPolyfill&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title>Metatable types</title><link>https://anaminus.github.io/blog/briefs/202307282028/</link><pubDate>Fri, 28 Jul 2023 20:28:25 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202307282028/</guid><content:encoded>&lt;p&gt;Luau:&lt;/p&gt;
&lt;p&gt;&amp;gt; Barges into output&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;code&gt;'Type { @metatable Foo, { } }' could not be converted into 'Foo'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;gt; Refuses to elaborate further&lt;/p&gt;
&lt;p&gt;&amp;gt; Leaves&lt;/p&gt;</content:encoded></item><item><title>If-expressions</title><link>https://anaminus.github.io/blog/briefs/202306240035/</link><pubDate>Sat, 24 Jun 2023 00:35:52 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202306240035/</guid><content:encoded>&lt;p&gt;&lt;em&gt;furiously begins authoring the &amp;ldquo;If-Expressions Considered Harmful&amp;rdquo; paper&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title>Premature features</title><link>https://anaminus.github.io/blog/briefs/202205231559/</link><pubDate>Mon, 23 May 2022 15:59:51 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202205231559/</guid><content:encoded>&lt;p&gt;Starting to get annoyed by Luau making features available before they&amp;rsquo;re
complete.&lt;/p&gt;
&lt;p&gt;Incidentally, tagged unions aren&amp;rsquo;t refined by the &lt;code&gt;else&lt;/code&gt; clause.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;really&lt;/em&gt; annoying thing is that the only way to find out a feature is
incomplete is to get halfway through writing something only to have the type
checker start slapping you with errors for things are logically correct.&lt;/p&gt;
&lt;p&gt;If I have a tagged union of &lt;code&gt;A | B&lt;/code&gt;, and &lt;code&gt;if v.type==&amp;quot;A&amp;quot; then&lt;/code&gt; refines to type
A, then logically, &lt;code&gt;else&lt;/code&gt; should refine to type B. Yet I have to find out the
hard way that it doesn&amp;rsquo;t.&lt;/p&gt;</content:encoded></item><item><title>table.unpack vs table.move</title><link>https://anaminus.github.io/blog/briefs/202204290035/</link><pubDate>Fri, 29 Apr 2022 00:35:51 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202204290035/</guid><content:encoded>&lt;p&gt;Which is faster: &lt;code&gt;table.unpack&lt;/code&gt; or &lt;code&gt;table.move?&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;table.unpack&lt;/code&gt; is going to be dumping potentially tons of values onto the stack,
while &lt;code&gt;table.move&lt;/code&gt; can avoid the stack entirely.&lt;/p&gt;</content:encoded></item><item><title>select bug</title><link>https://anaminus.github.io/blog/briefs/202202091515/</link><pubDate>Wed, 09 Feb 2022 15:15:19 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202202091515/</guid><content:encoded>&lt;p&gt;If you&amp;rsquo;re getting errors from my studio plugins, it&amp;rsquo;s because the select
function is being unruly again.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devforum.roblox.com/t/1652975/7"&gt;https://devforum.roblox.com/t/1652975/7&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title>If expressions</title><link>https://anaminus.github.io/blog/briefs/202112231648/</link><pubDate>Thu, 23 Dec 2021 16:48:59 +0000</pubDate><guid>https://anaminus.github.io/blog/briefs/202112231648/</guid><content:encoded>&lt;p&gt;Not having if-expressions would have forced you to write it out as a full
statement, having the miraculous side-effect of making the code clearer. This is
why I&amp;rsquo;m so grumpy about the syntax&amp;rsquo;s inclusion.&lt;/p&gt;</content:encoded></item></channel></rss>