<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog</title><link>https://anaminus.github.io/blog/</link><description>Recent content on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sun, 06 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://anaminus.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Securing secret branches</title><link>https://anaminus.github.io/blog/securing-secret-branches/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/blog/securing-secret-branches/</guid><description>&lt;p>Most posts I write will never be published. But I still keep them around
locally, because they often contain useful bits that will likely find their way
into another post.&lt;/p>
&lt;p>The blog is managed by git. When I want to publish a new post, I just commit and
push (&amp;ldquo;pushlish&amp;rdquo;?). I keep drafts on a separate branch that stays local.&lt;/p>
&lt;p>But how do I make sure it stays local? I don&amp;rsquo;t want to accidentally push super
secret drafts to GitHub! Fortunately, GitHub has what are called &amp;ldquo;Protection
rules&amp;rdquo;.&lt;/p>
&lt;p>To set it up, first the branch needs to be on GitHub. It&amp;rsquo;s easy enough to create
a new branch on the website by going to the &lt;code>/branches&lt;/code> page.&lt;/p>
&lt;p>&lt;img src="fig1.png" alt="">&lt;/p>
&lt;p>The branch has to be based off of another one. I used the same branch as what my
local &lt;code>drafts&lt;/code> branch is based off of. This will make accidental pulls safe,
since git will just think the local branch is the latest.&lt;/p>
&lt;p>Next, I went to Settings, then Branches, and added a new Branch protection rule,
where the pattern matched the name of the branch:&lt;/p>
&lt;p>&lt;img src="fig2.png" alt="">&lt;/p>
&lt;p>Then I included the Lock branch rule. This will prevent me from pushing to it. I
also included the &amp;ldquo;Do not allow bypassing above settings&amp;rdquo;. Seems like a safe
thing to do.&lt;/p>
&lt;p>&lt;img src="fig3.png" alt="">&lt;/p>
&lt;p>Saved the rule, and that&amp;rsquo;s it.&lt;/p>
&lt;p>&lt;img src="fig4.png" alt="">&lt;/p>
&lt;p>Now when I try to push to the branch, GitHub will reject the attempt.&lt;/p>
&lt;p>&lt;img src="fig5.png" alt="">&lt;/p>
&lt;p>Notably, git still tries to upload everything, and the rejection comes
afterwards. I could add a local pre-push hook to prevent the uploading, but I&amp;rsquo;m
not worried about it. The point is to prevent the drafts from becoming public,
which has already been accomplished.&lt;/p></description></item><item><title>Tiny UVs</title><link>https://anaminus.github.io/blog/tiny-uvs/</link><pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/blog/tiny-uvs/</guid><description>&lt;p>&lt;em>on Roblox&lt;/em>&lt;/p>
&lt;p>You want to produce meshes with simple, solid color textures. Because the colors
are solid, you should be able to get away with using small textures. Tiny
textures. Single-digit resolution textures. Possible, right?&lt;/p>
&lt;p>The problem: Roblox applies linear interpolation to its textures. Here is a
2-by-1 Decal, where the left pixel is white, and the right pixel is black:&lt;/p>
&lt;p>&lt;img src="fig1.png" alt="">&lt;/p>
&lt;p>Indeed, the left side is white, and the right side is black, but in between,
there is a smooth, linear interpolation from one pixel to the other.&lt;/p>
&lt;p>When constructing UVs for a mesh, we&amp;rsquo;ll have to find a way around this. Let&amp;rsquo;s
head over to Blender, and work on a simple plane mesh:&lt;/p>
&lt;p>&lt;img src="fig2.png" alt="">&lt;/p>
&lt;p>The interpolation of the texture should be set to &lt;strong>Linear&lt;/strong>, and the extension
should be set to &lt;strong>Repeat&lt;/strong>. This will match how Roblox renders textures on
MeshParts. When we import it into Roblox, it looks mostly similar:&lt;/p>
&lt;p>&lt;img src="fig3.png" alt="">&lt;/p>
&lt;p>Notably, the left side begins to fade towards black, while the right side fades
towards white, which proves that the texture repeats. So we&amp;rsquo;ll be able to use
Blender to get a rough idea of what Roblox will render.&lt;/p>
&lt;p>So how do we produce solid colors? We can&amp;rsquo;t just cover the whole pixel with a
face, because half of the pixel is always interpolating to its neighbor:&lt;/p>
&lt;p>&lt;img src="fig4.png" alt="">&lt;/p>
&lt;p>To get a solid color, the coordinates have to be in the exact center of the
pixel:&lt;/p>
&lt;p>&lt;img src="fig5.png" alt="">&lt;/p>
&lt;p>Two faces, each using one color:&lt;/p>
&lt;p>&lt;img src="fig6.png" alt="">&lt;/p>
&lt;p>But does it work in Roblox?&lt;/p>
&lt;p>&lt;img src="fig7.png" alt="">&lt;/p>
&lt;p>Indeed! To compare the colors, the top squares are regular Parts, while the
bottom squares are the mesh.&lt;/p>
&lt;p>UV coordinates are reused for SurfaceAppearance textures, so this technique can
be used to set the roughness and metalness of surfaces as well:&lt;/p>
&lt;p>&lt;img src="fig8.png" alt="">&lt;/p>
&lt;p>&lt;strong>Tip:&lt;/strong> To set the coordinates of many faces at once, select all the faces, use
the scale tool, and set the scale amounts to 0. This will move all vertices to a
single location, which you can then move to the center of the desired pixel.&lt;/p>
&lt;p>&lt;video src="fig9.webm" controls loop style="max-width:108%;margin-left:-3.8%">&lt;/video>&lt;/p>
&lt;p>Another interesting idea: Because colors are interpolated, we could set the
coordinates to somewhere besides a pixel center, in order to get more colors.
For example, the simple 2-by-1 white-to-black texture can also be used to get
any shade of gray.&lt;/p></description></item><item><title>Stop linking to issues/new</title><link>https://anaminus.github.io/blog/stop-linking-to-issues/new/</link><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/blog/stop-linking-to-issues/new/</guid><description>&lt;p>You have a neat software project. This project has a presence on GitHub. Maybe
you host the source code there, maybe you&amp;rsquo;re just leveraging the issue tracker.&lt;/p>
&lt;p>Your project also has a website. You know that your users will have problems
with your software, so you want to direct them from your website to your issue
tracker. You want them to have the most streamlined experience possible, so you
get the bright idea of linking to &lt;a>issues/new&lt;/a>. How convenient! One click,
and they&amp;rsquo;re able to start writing a report immediately! Except, that isn&amp;rsquo;t what
happens.&lt;/p>
&lt;figure>
&lt;img src="login.png" style="box-shadow: 0 0 8px gray;" alt="An unsolicited GitHub login page.">
&lt;figcaption>
What actually happens when users click on your link.
&lt;/figcaption>
&lt;/figure>
&lt;p>Ugh. Don&amp;rsquo;t assume my intentions. All you had to do was link to the issue page.
It&amp;rsquo;s not like opening a new issue from there is hard.&lt;/p>
&lt;figure>
&lt;img src="new-issue.png" style="box-shadow: 0 0 8px gray;" alt="New-issue button on GitHub's issue tracker page.">
&lt;figcaption>
Can't miss it.
&lt;/figcaption>
&lt;/figure>
&lt;p>Other reasons why you may not want to do this:&lt;/p>
&lt;ul>
&lt;li>Non-GitHub users are stonewalled from even viewing your tracker without
backtracking to find an alternate route.&lt;/li>
&lt;li>A user wants to check for an existing issue before submitting their own. Have
you been noticing a lot of duplicates?&lt;/li>
&lt;/ul>
&lt;p>If you &lt;em>are&lt;/em> going to pull this stunt, maybe you could at least link to the
issue tracker at the same time?&lt;/p>
&lt;hr>
&lt;p>&lt;em>Have a problem with this blog? &lt;a
href="https://www.youtube.com/watch?v=Jne9t8sHpUc">Submit a new issue&lt;/a>, or &lt;a
href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">view all of them&lt;/a>. See?
That wasn&amp;rsquo;t so hard.&lt;/em>&lt;/p></description></item><item><title>The episode in which I make a blog</title><link>https://anaminus.github.io/blog/the-episode-in-which-i-make-a-blog/</link><pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/blog/the-episode-in-which-i-make-a-blog/</guid><description>&lt;p>Found a &lt;a href="https://gohugo.io/">nice tool&lt;/a>, found a good workflow. Instead of long
chains of &lt;a href="https://twitter.com/Anaminus">tweets&lt;/a> and obscurely-located &lt;a href="https://devforum.roblox.com/u/anaminus">replies&lt;/a>, here we
have a proper place to write things.&lt;/p>
&lt;blockquote>
&lt;p>I would have written a shorter letter, but I did not have the time.
&amp;mdash; &lt;a href="https://en.wikipedia.org/wiki/Blaise_Pascal">Markus Twainicus&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>This post was originally much longer, but I had the time.&lt;/p></description></item></channel></rss>